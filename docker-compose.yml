version: '3.8'

services:
  trading-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: financial-rl-trading:latest
    container_name: trading-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MODEL_PATH=models/default/latest
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
      - API_KEY=${API_KEY:-default_development_key}
      - OPTIMIZATION_LEVEL=medium
    volumes:
      - ./models:/app/models  # 모델 디렉토리 마운트
      - ./logs:/app/logs      # 로그 디렉토리 마운트
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    depends_on:
      - trading-api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # 스트리밍 데이터 처리 서비스 (선택적)
  streaming-processor:
    build:
      context: .
      dockerfile: Dockerfile
    image: financial-rl-trading:latest
    container_name: streaming-processor
    restart: unless-stopped
    command: ["python", "-m", "examples.streaming_server"]
    environment:
      - MODEL_PATH=models/default/latest
      - LOG_LEVEL=INFO
      - API_KEY=${API_KEY:-default_development_key}
      - DATA_SOURCE=binance
      - SYMBOLS=BTC/USDT,ETH/USDT
      - INTERVAL=1m
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs

volumes:
  prometheus_data:
  grafana_data:
